name: Main Rust CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-build-and-test-linux:
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt-get update && sudo apt-get install -y libglib2.0-dev libgtk-3-dev libudev-dev
    - run: rustup update stable && rustup default stable
    - uses: actions/checkout@v3
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - run: cargo build
    - run: cargo test --workspace --exclude "*_firmware" --exclude sam_android

  cargo-build-and-test-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
    - run: rustup update stable && rustup default stable
    - uses: actions/checkout@v3
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - run: cargo build
    - run: cargo test --workspace --exclude "*_firmware" --exclude sam_android

  cargo-build-wasm:
    runs-on: ubuntu-latest
    steps:
    - run: rustup update stable && rustup default stable
    - run: rustup target add wasm32-unknown-unknown
    - run: cargo install trunk --locked
    - uses: actions/checkout@v3
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target/
          gui/target/
        key: ${{ runner.os }}-trunk-${{ hashFiles('**/Cargo.lock') }}
    - run: cd gui && trunk build --release

  cargo-fmt:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - run: rustup update stable && rustup default stable
    - uses: actions/checkout@v3
    - run: cargo fmt --check
