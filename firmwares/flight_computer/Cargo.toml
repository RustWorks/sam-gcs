[package]
name = "sting_fc_firmware"
version = "0.1.0"
authors = [
    # Feel free to add yourself here
    "Felix Wiegand <felix-wiegand@protonmail.ch>"
]
edition = "2021"

[[test]]
name = "telemetry"
harness = false

[lib]
harness = false

[dependencies]
embedded-hal = "0.2"
num-traits = { version = "0.2.15", default-features = false }
nb = "1"
cortex-m = { version = "0.7", features = ["critical-section-single-core"], optional = true }
cortex-m-rt = { version = "0.7", optional = true }
# Only load this for no_std, since it forces us to use nightly
alloc-cortex-m = { version = "0.4", optional = true }
# Same here, but this is because it can cause issues when the library is loaded in wasm or x86
stm32f4xx-hal = {git = "https://github.com/stm32-rs/stm32f4xx-hal", features = ["rt", "stm32f401", "usb_fs"], rev="a0971b2a2cb83292489ff3619bece79a63c81269", optional = true }
usbd-serial = "0.1.1"
usb-device ="0.2.9"
serde = { version = "1", default-features = false, features = ["derive", "alloc"] }
postcard = "1.0"
crc = "3"
ahrs = { git = "https://github.com/KoffeinFlummi/ahrs-rs", default-features = false }
nalgebra = { version = "0.31", default-features = false, features = ["alloc", "serde-serialize-no-std"] }
filter = { git = "https://github.com/KoffeinFlummi/filter-rs" }
ublox = { version = "0.4", default-features = false }
siphasher = { version = "0.3", default-features = false }
defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }

[dependencies.embedded-hal-one]
version = "=1.0.0-alpha.8"
package = "embedded-hal"

[dev-dependencies]
defmt-test = "0.3"

[features]
default = ["no_std", "rev2"]
rev1 = []
rev2 = []
no_std = ["alloc-cortex-m", "stm32f4xx-hal", "cortex-m", "cortex-m-rt"]
gcs = []

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 'z'          # <-
overflow-checks = false  # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 'z'          # <-
overflow-checks = false  # <-
